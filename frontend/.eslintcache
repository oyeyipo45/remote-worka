[{"/Users/damilila/Documents/work/upwork-clone/frontend/src/index.js":"1","/Users/damilila/Documents/work/upwork-clone/frontend/src/reportWebVitals.js":"2","/Users/damilila/Documents/work/upwork-clone/frontend/src/App.js":"3","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/HomeScreen.js":"4","/Users/damilila/Documents/work/upwork-clone/frontend/src/components/Body.js":"5","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/actions/postActions.js":"6","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/constants/postConstants.js":"7","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/store.js":"8","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/reducers/postReducers.js":"9","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/PostScreen.js":"10","/Users/damilila/Documents/work/upwork-clone/frontend/src/components/Header.js":"11","/Users/damilila/Documents/work/upwork-clone/frontend/src/components/Footer.js":"12","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/ProposalScreen.js":"13","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/RegisterScreen.js":"14","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/reducers/userReducers.js":"15","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/constants/userConstants.js":"16","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/actions/userActions.js":"17","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/LoginScreen.js":"18","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/ProfileScreen.js":"19","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/CreatePostScreen.js":"20","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/EditPostScreen.js":"21","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/reducers/bidReducers.js":"22","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/constants/bidConstants.js":"23","/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/actions/bidActions.js":"24","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/BidsListScreen.js":"25","/Users/damilila/Documents/work/upwork-clone/frontend/src/components/BidList.js":"26","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/BidDetailsScreen.js":"27","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/PlacedBidsScreen.js":"28","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/BidSuccessScreen.js":"29"},{"size":576,"mtime":1608286736524,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1608130207559,"results":"32","hashOfConfig":"31"},{"size":1841,"mtime":1608487623649,"results":"33","hashOfConfig":"31"},{"size":951,"mtime":1608481985719,"results":"34","hashOfConfig":"31"},{"size":1821,"mtime":1608508325600,"results":"35","hashOfConfig":"31"},{"size":3178,"mtime":1608364665769,"results":"36","hashOfConfig":"31"},{"size":878,"mtime":1608364526729,"results":"37","hashOfConfig":"31"},{"size":1693,"mtime":1608493812593,"results":"38","hashOfConfig":"31"},{"size":2154,"mtime":1608364580016,"results":"39","hashOfConfig":"31"},{"size":4174,"mtime":1608508205724,"results":"40","hashOfConfig":"31"},{"size":3274,"mtime":1608495729877,"results":"41","hashOfConfig":"31"},{"size":308,"mtime":1608480970982,"results":"42","hashOfConfig":"31"},{"size":3265,"mtime":1608483446099,"results":"43","hashOfConfig":"31"},{"size":3714,"mtime":1608483339862,"results":"44","hashOfConfig":"31"},{"size":2792,"mtime":1608334528593,"results":"45","hashOfConfig":"31"},{"size":1284,"mtime":1608307580679,"results":"46","hashOfConfig":"31"},{"size":4837,"mtime":1608368623525,"results":"47","hashOfConfig":"31"},{"size":2442,"mtime":1608483331231,"results":"48","hashOfConfig":"31"},{"size":4793,"mtime":1608483954927,"results":"49","hashOfConfig":"31"},{"size":7095,"mtime":1608532055440,"results":"50","hashOfConfig":"31"},{"size":8762,"mtime":1608481946041,"results":"51","hashOfConfig":"31"},{"size":3360,"mtime":1608493765440,"results":"52","hashOfConfig":"31"},{"size":1398,"mtime":1608493987563,"results":"53","hashOfConfig":"31"},{"size":5455,"mtime":1608493656606,"results":"54","hashOfConfig":"31"},{"size":1062,"mtime":1608489567881,"results":"55","hashOfConfig":"31"},{"size":2176,"mtime":1608508266625,"results":"56","hashOfConfig":"31"},{"size":4715,"mtime":1608508422188,"results":"57","hashOfConfig":"31"},{"size":1201,"mtime":1608487567691,"results":"58","hashOfConfig":"31"},{"size":368,"mtime":1608458547382,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"y4u2xz",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},"/Users/damilila/Documents/work/upwork-clone/frontend/src/index.js",[],["123","124"],"/Users/damilila/Documents/work/upwork-clone/frontend/src/reportWebVitals.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/App.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/HomeScreen.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/components/Body.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/actions/postActions.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/constants/postConstants.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/store.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/reducers/postReducers.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/PostScreen.js",["125"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { listPostDetails } from \"../redux/actions/postActions\";\n\nconst PostScreen = ({ history, location, match }) => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo, loading: userInfoLoading } = userLogin;\n  console.log(userInfo);\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user } = userDetails;\n  console.log(user, \"useeeeeeee\");\n  const postDetails = useSelector((state) => state.postDetails);\n  const { loading, error, post } = postDetails;\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  useEffect(() => {\n    if (!userInfo && !user) {\n      history.push(\"/login\");\n    }\n\n    dispatch(listPostDetails(match.params.id));\n  }, [dispatch, userInfo, match, history, user, redirect]);\n\n  return (\n    <>\n      <div className=\"post-details-heading\">\n        <Link className=\"link-back\" to=\"/\">\n          Go Back To Home\n        </Link>\n        <p>OO</p>\n      </div>\n\n      {loading ? (\n        <div className=\"bidlist-screen\">\n          <p> LOADING ... </p>\n        </div>\n      ) : error ? (\n        <div className=\"bidlist-screen\">\n          {\" \"}\n          <p>ERROR ..... </p>\n        </div>\n      ) : (\n        <section className=\"job \">\n          <div className=\"container-sm\">\n            <div className=\"job-details\">\n              <div className=\"company__details\">\n                <div className=\"company__name\">\n                  <h2> Job posted by {post.hirerName}</h2>\n                </div>\n              </div>\n              <div className=\"job-details__time\">\n                <p className=\"posted\">3d ago</p>\n                <p className=\"dot\">·</p>\n                <p className=\"time\">{post.jobType}</p>\n              </div>\n              <div className=\"job-details__post\">\n                <div className=\"job-title\">\n                  <h2>{post.jobTitle}</h2>\n                </div>\n                <p>{post.location}</p>\n                <div>\n                  {\" \"}\n                  {post.jobAvailability === \"pending\" ? (\n                    <p style={{ color: \"green\" }}>Job Open</p>\n                  ) : (\n                    <p style={{ color: \"red\" }}> Job Closed </p>\n                  )}\n                </div>\n              </div>\n              <article className=\"job-details__description\">\n                <div className=\"mb-2\">\n                  <h5>About Job</h5>\n                  {post.aboutJob}\n                </div>\n\n                <div className=\"mb-2\">\n                  <h5>Requirements</h5>\n                  {/* {post.jobRequirements.map((req) => (\n                    <div key={post._id}> {req} </div>\n                  ))} */}\n                </div>\n                <div className=\"mb-2\">\n                  <h5>Hourly Rate</h5>${post.hourlyRate} Per Hour\n                </div>\n                <div className=\"mb-2\">\n                  <h5>Payment Verification</h5>\n                  {post.paymentVerification ? (\n                    <p style={{ color: \"green\" }}>Verified</p>\n                  ) : (\n                    <p style={{ color: \"red\" }}>Not Verified</p>\n                  )}\n                </div>\n                <div className=\"mb-2\">\n                  <h5>Level</h5>\n                  {post.level} Level\n                </div>\n                <div className=\"mb-2\">\n                  <h5>Duration</h5>\n                  {post.duration} Weeks\n                </div>\n                <div className=\"mb-2\">\n                  <h5>Job posted at</h5>\n                  {post.createdAt}\n                </div>\n              </article>\n            </div>\n            <div className=\"how-to-apply\">\n              {post.jobAvailability === \"pending\" ? (\n                <Link to={`/proposal/${post._id}`}>\n                  <h2>Submit Proposal</h2>{\" \"}\n                </Link>\n              ) : (\n                <p>closed</p>\n              )}\n            </div>\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default PostScreen;\n","/Users/damilila/Documents/work/upwork-clone/frontend/src/components/Header.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/components/Footer.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/ProposalScreen.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/RegisterScreen.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/reducers/userReducers.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/constants/userConstants.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/actions/userActions.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/LoginScreen.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/ProfileScreen.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/CreatePostScreen.js",["126"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost } from \"../redux/actions/postActions\";\n\nconst CreatePostScreen = ({ location, history }) => {\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobAvailability, setJobAvailability] = useState(\"\");\n  const [aboutJob, setAboutJob] = useState(\"\");\n  const [hirerName, setHirerName] = useState(\"\");\n  const [jobLocation, setJobLocation] = useState(\"\");\n  const [jobType, setJobType] = useState(\"\");\n  const [jobRequirements, setJobRequirements] = useState(\"\");\n  const [hourlyRate, setHourlyRate] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [paymentVerification, setPaymentVerification] = useState(\"\");\n  const [amountSpent, setAmountSpent] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const postCreate = useSelector((state) => state.postCreate);\n  const { success, post, error } = postCreate;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n    if (success) {\n      history.push(`/post/${post._id}`);\n    }\n  }, [dispatch, history, userInfo, redirect, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (\n      jobTitle === \"\" ||\n      jobAvailability === \"\" ||\n      aboutJob === \"\" ||\n      hirerName === \"\" ||\n      jobLocation === \"\" ||\n      jobType === \"\" ||\n      jobRequirements === \"\" ||\n      hourlyRate === \"\" ||\n      level === \"\" ||\n      paymentVerification === \"\" ||\n      amountSpent === \"\" ||\n      duration === \"\"\n    ) {\n      setMessage(\"Please fill all fields\");\n    } else {\n      dispatch(\n        createPost({\n          jobTitle,\n          jobAvailability,\n          aboutJob,\n          hirerName,\n          jobLocation,\n          jobType,\n          jobRequirements,\n          hourlyRate,\n          level,\n          paymentVerification,\n          amountSpent,\n          duration,\n        })\n      );\n    }\n  };\n\n  return (\n    <div className=\"create-post\">\n      <div className=\"customer-signin\">\n        <div className=\"customer-signin-header\">\n          <h3 className=\"customer-signin-heading\">Create Job Post</h3>\n\n          {message && <p>{message}</p>}\n          {error && <p>{error}</p>}\n          {success && <p>Post Created</p>}\n        </div>\n\n        <form\n          action=\"\"\n          onSubmit={submitHandler}\n          className=\"customer-signin-form\"\n        >\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"text\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Job Title\"\n              required\n              value={jobTitle}\n              onChange={(e) => setJobTitle(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"text\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Job Availability\"\n              required\n              value={jobAvailability}\n              onChange={(e) => setJobAvailability(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"text\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"About job\"\n              required\n              value={aboutJob}\n              onChange={(e) => setAboutJob(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"text\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Hirer name\"\n              required\n              value={hirerName}\n              onChange={(e) => setHirerName(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"text\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Location\"\n              required\n              value={jobLocation}\n              onChange={(e) => setJobLocation(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"text\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Job Type\"\n              required\n              value={jobType}\n              onChange={(e) => setJobType(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"text\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Job Requirements\"\n              required\n              value={jobRequirements}\n              onChange={(e) => setJobRequirements(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"number\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Hourly Rate\"\n              required\n              value={hourlyRate}\n              onChange={(e) => setHourlyRate(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"text\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Expertise Level\"\n              required\n              value={level}\n              onChange={(e) => setLevel(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"text\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Payment Verification\"\n              required\n              value={paymentVerification}\n              onChange={(e) => setPaymentVerification(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"number\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Amount Spent\"\n              required\n              value={amountSpent}\n              onChange={(e) => setAmountSpent(e.target.value)}\n            />\n          </div>\n          <div className=\"customer-signin-form-group\">\n            <input\n              type=\"number\"\n              className=\"customer-signin-form-input\"\n              placeholder=\"Duration\"\n              required\n              value={duration}\n              onChange={(e) => setDuration(e.target.value)}\n            />\n          </div>\n\n          <div className=\"customer-signin-form-group\">\n            <button type=\"submit\" className=\"customer-signin-btn\">\n              Post Job\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatePostScreen;\n","/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/EditPostScreen.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/reducers/bidReducers.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/constants/bidConstants.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/redux/actions/bidActions.js",[],["127","128"],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/BidsListScreen.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/components/BidList.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/BidDetailsScreen.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/PlacedBidsScreen.js",[],"/Users/damilila/Documents/work/upwork-clone/frontend/src/screens/BidSuccessScreen.js",["129","130"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst BidSuccessScreen = () => {\n  const bidCreate = useSelector((state) => state.bidCreate);\n  const { success, error } = bidCreate;\n  console.log(success);\n  return (\n    <div class=\"cover\">\n      <div> bid was successful </div>\n    </div>\n  );\n};\n\nexport default BidSuccessScreen;\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":10,"column":30,"nodeType":"137","messageId":"138","endLine":10,"endColumn":45},{"ruleId":"139","severity":1,"message":"140","line":37,"column":6,"nodeType":"141","endLine":37,"endColumn":54,"suggestions":"142"},{"ruleId":"131","replacedBy":"143"},{"ruleId":"133","replacedBy":"144"},{"ruleId":"135","severity":1,"message":"145","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":21},{"ruleId":"135","severity":1,"message":"146","line":6,"column":20,"nodeType":"137","messageId":"138","endLine":6,"endColumn":25},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'userInfoLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post._id'. Either include it or remove the dependency array.","ArrayExpression",["149"],["147"],["148"],"'useDispatch' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [dispatch, history, userInfo, redirect, success, post._id]",{"range":"152","text":"153"},[1372,1420],"[dispatch, history, userInfo, redirect, success, post._id]"]